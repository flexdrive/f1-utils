{"version":3,"file":"index.js","sources":["../src/currency/index.js"],"sourcesContent":["const numeral = require('numeral');\n\nconst symbols = {\n    'NOK': {\n        delimiters: {\n            thousands: ' ',\n            decimal: ','\n        },\n        currency: {\n            symbol: 'kr',\n            symbolPosition: 'POST'\n        },\n        format: '0,0.00 $',\n        raw: '0,0.00'\n    },\n    'USD': {\n        delimiters: {\n            thousands: ',',\n            decimal: '.'\n        },\n        currency: {\n            symbol: '$',\n            symbolPosition: 'PRE'\n        },\n        format: '$0,0.00',\n        raw: '0,0.00'\n    }\n};\n\nexport function setLocale(locale = 'USD') {\n    const localeSettings = symbols[locale.toUpperCase()];\n    numeral.register('locale', locale, localeSettings);\n    numeral.locale(locale);\n\n    const format = function (val, raw = false) {\n        const dollars = centsToDollars(val);\n        return numeral(parseFloat(dollars)).format(raw ? localeSettings.raw : localeSettings.format);\n    };\n\n    const currencySymbol = function () {\n        return localeSettings.currency.symbol;\n    };\n\n    const currencySymbolPosition = function () {\n        return numeral.localeData().currency.symbolPosition;\n    };\n\n    const localeDecimal = function () {\n        return numeral.localeData().delimiters.decimal;\n    };\n\n    const centsToDollars = function (amt = 0, decimals = 2) {\n        let value = amt;\n\n        if (typeof amt === 'string') {\n            value = parseInt(value);\n        }\n\n        if (value === 0) {\n            return `${value}`;\n        }\n\n        if (decimals === 0) {\n            return `${(value / 100)}`;\n        }\n\n        return (value / 100).toFixed(decimals);\n    };\n\n    const dollarsToCents = function (amt) {\n        const value = typeof amt === 'string'\n            ? parseFloat(amt.replace(localeDecimal(), '.'))\n            : amt;\n\n        return Math.round(100 * value);\n    }\n\n    const methods = {\n        format,\n        currencySymbol,\n        currencySymbolPosition,\n        localeDecimal,\n        centsToDollars,\n        dollarsToCents\n    }\n\n    return methods;\n}"],"names":["numeral","require","symbols","delimiters","thousands","decimal","currency","symbol","symbolPosition","format","raw","setLocale","locale","localeSettings","toUpperCase","register","val","dollars","centsToDollars","parseFloat","currencySymbol","currencySymbolPosition","localeData","localeDecimal","amt","decimals","value","parseInt","toFixed","dollarsToCents","replace","Math","round","methods"],"mappings":"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"}